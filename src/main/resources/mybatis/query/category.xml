<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="category">

	<cache 
		eviction="LRU" 
		flushInterval="60000"/>

	<sql id="selectCategorySql">
			cate_id   AS cateId
		,	cate_name AS cateName
		,	pcate_id  AS pcateId
		,	use_yn    AS useYn
	</sql>
	
	<select id="getCategoryTreeList" parameterType="category" resultType="category">
		SELECT  hi.cate_id AS cateId
			,	cate_name  AS cateName
			,	pcate_id   AS pcateId
			,	use_yn     AS useYn 
			,	level
		FROM    (
		        SELECT  category_connect_by(cate_id) AS cate_id, @level AS level
		        FROM    (
		                SELECT  @start_with := 0,
		                        @id := @start_with,
		                        @level := 0
		                ) vars, tb_category
		        WHERE   @id IS NOT NULL
		        ) ho
		JOIN    tb_category hi
		ON      hi.cate_id = ho.cate_id
	</select>
	
	<select id="getCategoryList" parameterType="category" resultType="category">
		select <include refid="selectCategorySql"/>
		from tb_category
		<where>
			<if test='pcateId != null'>
				pcate_id = #{pcateId}
			</if>
		</where>
	</select>
	
	<insert id="insertCategory" parameterType="category" flushCache="true" useGeneratedKeys="true" keyProperty="cateId">	
		insert into tb_category (
				cate_name
			,	pcate_id
			,	use_yn
		) values (
				#{cateName}
			,	#{pcateId}
			,	'Y'
		)		
	</insert>
	
	<sql id="selectCategoryTagSql">
			P.cate_id as cateId
		,	P.cate_name as cateName
		,	P.pcate_id as pcateId
		,	P.use_yn as useYn
		,	C.tag as tag	
	</sql>
	
	<select id="getCategoryTagList" parameterType="categoryTag" resultType="categoryTag">
		select <include refid="selectCategoryTagSql"/>
		from tb_category P 
		left join tb_category_tag C
		on P.cate_id = C.cate_id
		<where>
			<if test='pcateId != null'>
				P.cate_id = #{pcateId}
			</if>
			<if test='tag != null'>
				and C.tag like concat('%', #{tag}, '%')
			</if>
		</where>
	</select>
	
	<select id="getUniqueCategoryTagList" parameterType="categoryTag" resultType="categoryTag">
		select distinct(cateId)
		from (
			select <include refid="selectCategoryTagSql"/>
			from tb_category P 
			left join tb_category_tag C
			on C.cate_id = P.cate_id
			<where>
				<if test='pcateId != null'>
					P.cate_id = #{pcateId}
				</if>
				<if test='tag != null'>
					and C.tag like concat('%', #{tag}, '%')
				</if>
			</where>		
		) OUT_TB
	</select>
	
	<insert id="insertCategoryTag" parameterType="categoryTag" flushCache="true" useGeneratedKeys="true" keyProperty="seq">		
		insert into tb_category_tag (
				cate_id
			,	tag
		) values (
				#{cateId}
			,	#{tag}
		)
	</insert>
	
	<sql id="selectCategoryTagUnregSql">
			seq
		,	prd_seq  AS prdSeq
		,	mall_id  AS mallId
		,	prd_name AS prdName
		,	tag
		,	proc_yn  AS procYn
		,	DATE_FORMAT(reg_dt, '%Y-%m-%d %H:%i:%s') AS regDt
	</sql>
	
	<select id="getCategoryTagUnregList" resultType="categoryTagUnreg" parameterType="categoryTagUnreg">
		select <include refid="selectCategoryTagUnregSql"/>
		from tb_category_tag_unreg
	</select>
	
	<insert id="insertCategoryTagUnreg" parameterType="categoryTagUnreg" flushCache="true" useGeneratedKeys="true" keyProperty="seq">
		insert into tb_category_tag_unreg (
				prd_seq
			,	mall_id
			,	prd_name
			,	tag
			,	proc_yn
			,	reg_dt
		) values (
				#{prdSeq}
			,	#{mallId}
			,	#{prdName}
			,	#{tag}
			,	'N'
			,	now() 
		)
	</insert>
	
	<update id="updateCategoryTagUnreg" parameterType="categoryTagUnreg">
		update tb_category_tag_unreg
		<set>
			<if test='useYn != null'>use_yn = #{useYn},</if>
		</set>
		where seq = #{seq}
	</update>
	
	
	<select id="getTestList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select co1, co2, co3, co4
		from test_bbs
		order by seq desc
		LIMIT #{page}, #{rowPerPage}
	</select>
	
	<select id="getTestListCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select COUNT(*)
		from test_bbs
	</select>	
	
</mapper>